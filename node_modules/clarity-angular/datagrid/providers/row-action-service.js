/*
 * Copyright (c) 2016 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { Injectable } from "@angular/core";
import { DatagridRenderOrganizer } from "../render/render-organizer";
export var RowActionService = (function () {
    function RowActionService(renderOrganizer) {
        this.renderOrganizer = renderOrganizer;
        /**
         * false means no rows with action
         */
        this.hasActionableRow = false;
        /*
         * Ad-hoc dirty lock, handling only a single pending action
         */
        this.locked = false;
    }
    RowActionService.prototype.open = function (fn) {
        if (!this.locked) {
            this.locked = true;
            fn();
            // Scrollbar might have disappeared, we need to warn the renderers
            // TODO: A webkit bug prevents us from simply refreshing the scrollbar. Weird. Needs investigation.
            // this.renderOrganizer.scrollbar.next();
            this.renderOrganizer.resize();
        }
        else {
            this.waiting = fn;
        }
    };
    RowActionService.prototype.close = function () {
        if (this.waiting) {
            this.waiting();
            delete this.waiting;
        }
        else {
            this.locked = false;
            // Scrollbar might have appeared, we need to warn the renderers
            // TODO: A webkit bug prevents us from simply refreshing the scrollbar. Weird. Needs investigation.
            // this.renderOrganizer.scrollbar.next();
            this.renderOrganizer.resize();
        }
    };
    RowActionService.decorators = [
        { type: Injectable },
    ];
    /** @nocollapse */
    RowActionService.ctorParameters = function () { return [
        { type: DatagridRenderOrganizer, },
    ]; };
    return RowActionService;
}());
//# sourceMappingURL=row-action-service.js.map