import { Directive, ElementRef, Renderer } from "@angular/core";
import { DomAdapter } from "./dom-adapter";
import { STRICT_WIDTH_CLASS } from "./constants";
import { DatagridRenderOrganizer } from "./render-organizer";
export var DatagridHeaderRenderer = (function () {
    function DatagridHeaderRenderer(el, renderer, domAdapter, organizer) {
        var _this = this;
        this.el = el;
        this.renderer = renderer;
        this.domAdapter = domAdapter;
        this.widthSet = false;
        this.subscription = organizer.clearWidths.subscribe(function () { return _this.clearWidth(); });
    }
    DatagridHeaderRenderer.prototype.ngOnDestroy = function () {
        this.subscription.unsubscribe();
    };
    DatagridHeaderRenderer.prototype.clearWidth = function () {
        this.renderer.setElementClass(this.el.nativeElement, STRICT_WIDTH_CLASS, false);
        // We only clear if we set the width ourselves, otherwise we risk clearing consumer styles.
        if (this.widthSet) {
            this.renderer.setElementStyle(this.el.nativeElement, "width", null);
            this.widthSet = false;
        }
        var strictWidth = this.domAdapter.userDefinedWidth(this.el.nativeElement);
        if (strictWidth) {
            this.strictWidth = strictWidth;
        }
        else {
            delete this.strictWidth;
        }
    };
    DatagridHeaderRenderer.prototype.computeWidth = function () {
        if (this.strictWidth) {
            // We do NOT set the width here, since we know the user already provided it.
            this.renderer.setElementClass(this.el.nativeElement, STRICT_WIDTH_CLASS, true);
            return this.strictWidth;
        }
        else {
            var width = this.domAdapter.scrollWidth(this.el.nativeElement);
            this.renderer.setElementClass(this.el.nativeElement, STRICT_WIDTH_CLASS, false);
            this.renderer.setElementStyle(this.el.nativeElement, "width", width + "px");
            this.widthSet = true;
            return width;
        }
    };
    DatagridHeaderRenderer.decorators = [
        { type: Directive, args: [{
                    selector: "clr-dg-column"
                },] },
    ];
    /** @nocollapse */
    DatagridHeaderRenderer.ctorParameters = function () { return [
        { type: ElementRef, },
        { type: Renderer, },
        { type: DomAdapter, },
        { type: DatagridRenderOrganizer, },
    ]; };
    return DatagridHeaderRenderer;
}());
//# sourceMappingURL=header-renderer.js.map