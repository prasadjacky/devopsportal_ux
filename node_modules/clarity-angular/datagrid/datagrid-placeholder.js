import { Component } from "@angular/core";
import { Items } from "./providers/items";
import { Page } from "./providers/page";
export var DatagridPlaceholder = (function () {
    function DatagridPlaceholder(items, page) {
        this.items = items;
        this.page = page;
    }
    Object.defineProperty(DatagridPlaceholder.prototype, "emptyDatagrid", {
        /**
         * Tests if the datagrid is empty, meaning it doesn't contain any items
         */
        get: function () {
            return !this.items.loading && (!this.items.displayed || this.items.displayed.length === 0);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DatagridPlaceholder.prototype, "nbEmptyRows", {
        /**
         * Number of empty rows to display to ensure we preserve a fixed height on the datagrid,
         * even if the last page has less items than the previous ones
         */
        get: function () {
            var rowsDisplayed = 0;
            if (this.items.displayed) {
                rowsDisplayed = this.items.displayed.length;
            }
            // Always leave space for at least 2 rows even if the datagrid isn't paginated
            return Math.max(this.page.size, 2) - rowsDisplayed;
        },
        enumerable: true,
        configurable: true
    });
    DatagridPlaceholder.decorators = [
        { type: Component, args: [{
                    selector: "clr-dg-placeholder",
                    template: "\n        <!--\n            I hate doing this, with these 36px being baselineRem(1.5) hardcoded here,\n            but I don't see a better solution right now.\n            \n            TODO: with the new flexbox layout, it might be possible to get rid of this!\n        -->\n        <div class=\"datagrid-placeholder\" [style.min-height]=\"(36*nbEmptyRows)+'px'\"\n            *ngIf=\"nbEmptyRows > 0\" [class.datagrid-empty]=\"emptyDatagrid\">\n            <div class=\"datagrid-placeholder-image\" *ngIf=\"emptyDatagrid\"></div>\n            <ng-content *ngIf=\"emptyDatagrid\"></ng-content>\n        </div>\n    ",
                    host: {
                        "[class.datagrid-placeholder-container]": "true"
                    }
                },] },
    ];
    /** @nocollapse */
    DatagridPlaceholder.ctorParameters = function () { return [
        { type: Items, },
        { type: Page, },
    ]; };
    return DatagridPlaceholder;
}());
//# sourceMappingURL=datagrid-placeholder.js.map