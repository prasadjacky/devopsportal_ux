import { Component, Input, Output, EventEmitter } from "@angular/core";
import { Selection, SelectionType } from "./providers/selection";
import { RowActionService } from "./providers/row-action-service";
var nbRow = 0;
export var DatagridRow = (function () {
    function DatagridRow(selection, rowActionService) {
        this.selection = selection;
        this.rowActionService = rowActionService;
        /* reference to the enum so that template can access */
        this.SELECTION_TYPE = SelectionType;
        this._selected = false;
        this.selectedChanged = new EventEmitter(false);
        this.id = "clr-dg-row" + (nbRow++);
    }
    Object.defineProperty(DatagridRow.prototype, "selected", {
        /**
         * Indicates if the row is selected
         */
        get: function () {
            if (this.selection.selectionType === SelectionType.None) {
                return this._selected;
            }
            else {
                return this.selection.isSelected(this.item);
            }
        },
        set: function (value) {
            if (this.selection.selectionType === SelectionType.None) {
                this._selected = value;
            }
            else {
                this.selection.setSelected(this.item, value);
            }
        },
        enumerable: true,
        configurable: true
    });
    DatagridRow.prototype.toggle = function (selected) {
        if (selected === void 0) { selected = !this.selected; }
        if (selected !== this.selected) {
            this.selected = selected;
            this.selectedChanged.emit(selected);
        }
    };
    DatagridRow.decorators = [
        { type: Component, args: [{
                    selector: "clr-dg-row",
                    template: "\n        <clr-dg-cell *ngIf=\"selection.selectionType === SELECTION_TYPE.Multi\" class=\"datagrid-select\">\n            <clr-checkbox [ngModel]=\"selected\" (ngModelChange)=\"toggle($event)\"></clr-checkbox>\n        </clr-dg-cell>\n        <clr-dg-cell *ngIf=\"selection.selectionType === SELECTION_TYPE.Single\" class=\"datagrid-select\">\n            <div class=\"radio\">\n                <input type=\"radio\" [id]=\"id\"  [name]=\"selection.id + '-radio'\" [value]=\"item\" \n                    [(ngModel)]=\"selection.currentSingle\">    \n                <label for=\"{{id}}\"></label>\n            </div>\n        </clr-dg-cell>\n        <clr-dg-cell *ngIf=\"rowActionService.hasActionableRow\" class=\"datagrid-row-actions\">\n            <ng-content select=\"clr-dg-action-overflow\"></ng-content>\n        </clr-dg-cell>\n        <ng-content></ng-content>\n    ",
                    host: {
                        "[class.datagrid-row]": "true",
                        "[class.datagrid-selected]": "selected"
                    }
                },] },
    ];
    /** @nocollapse */
    DatagridRow.ctorParameters = function () { return [
        { type: Selection, },
        { type: RowActionService, },
    ]; };
    DatagridRow.propDecorators = {
        'item': [{ type: Input, args: ["clrDgItem",] },],
        'selected': [{ type: Input, args: ["clrDgSelected",] },],
        'selectedChanged': [{ type: Output, args: ["clrDgSelectedChange",] },],
    };
    return DatagridRow;
}());
//# sourceMappingURL=datagrid-row.js.map