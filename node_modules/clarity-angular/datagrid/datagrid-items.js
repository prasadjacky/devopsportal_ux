import { ChangeDetectorRef, Directive, Input, IterableDiffers, TemplateRef } from "@angular/core";
import { Items } from "./providers/items";
export var DatagridItems = (function () {
    function DatagridItems(template, _differs, _changeDetector, _items) {
        this.template = template;
        this._differs = _differs;
        this._changeDetector = _changeDetector;
        this._items = _items;
        /**
         * Tracking function to identify objects. Default is reference equality.
         */
        this.trackBy = function (index, item) { return item; };
        _items.smartenUp();
    }
    DatagridItems.prototype.ngOnChanges = function (changes) {
        if ("rawItems" in changes) {
            var currentItems = changes["rawItems"].currentValue;
            if (!this._differ && currentItems) {
                this._differ = this._differs.find(currentItems).create(this._changeDetector, this.trackBy);
            }
        }
    };
    DatagridItems.prototype.ngDoCheck = function () {
        if (this._differ) {
            var changes = this._differ.diff(this.rawItems);
            if (changes) {
                // TODO: not very efficient right now,
                // but premature optimization is the root of all evil.
                this._items.all = this.rawItems;
            }
        }
    };
    DatagridItems.decorators = [
        { type: Directive, args: [{
                    selector: "[clrDgItems][clrDgItemsOf]",
                },] },
    ];
    /** @nocollapse */
    DatagridItems.ctorParameters = function () { return [
        { type: TemplateRef, },
        { type: IterableDiffers, },
        { type: ChangeDetectorRef, },
        { type: Items, },
    ]; };
    DatagridItems.propDecorators = {
        'rawItems': [{ type: Input, args: ["clrDgItemsOf",] },],
        'trackBy': [{ type: Input, args: ["clrDgItemsTrackBy",] },],
    };
    return DatagridItems;
}());
//# sourceMappingURL=datagrid-items.js.map