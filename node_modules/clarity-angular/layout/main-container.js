import { Directive, ElementRef } from "@angular/core";
import { ClrResponsiveNavigationService } from "../nav/clrResponsiveNavigationService";
import { ClrResponsiveNavCodes } from "../nav/clrResponsiveNavCodes";
export var MainContainer = (function () {
    function MainContainer(elRef, responsiveNavService) {
        this.elRef = elRef;
        this.responsiveNavService = responsiveNavService;
    }
    MainContainer.prototype.ngOnInit = function () {
        var _this = this;
        this._classList = this.elRef.nativeElement.classList;
        this._subscription = this.responsiveNavService.navControl.subscribe({
            next: function (message) {
                _this.processMessage(message);
            }
        });
    };
    MainContainer.prototype.processMessage = function (message) {
        var navClass = ClrResponsiveNavCodes.NAV_CLASS_HAMBURGER_MENU;
        if (message.controlCode === ClrResponsiveNavCodes.NAV_CLOSE_ALL) {
            this._classList.remove(ClrResponsiveNavCodes.NAV_CLASS_HAMBURGER_MENU);
            this._classList.remove(ClrResponsiveNavCodes.NAV_CLASS_OVERFLOW_MENU);
        }
        else if (message.navLevel === ClrResponsiveNavCodes.NAV_LEVEL_1) {
            this.controlNav(message.controlCode, navClass);
        }
        else if (message.navLevel === ClrResponsiveNavCodes.NAV_LEVEL_2) {
            navClass = ClrResponsiveNavCodes.NAV_CLASS_OVERFLOW_MENU;
            this.controlNav(message.controlCode, navClass);
        }
    };
    MainContainer.prototype.controlNav = function (controlCode, navClass) {
        if (controlCode === ClrResponsiveNavCodes.NAV_OPEN) {
            this._classList.add(navClass);
        }
        else if (controlCode === ClrResponsiveNavCodes.NAV_CLOSE) {
            this._classList.remove(navClass);
        }
        else if (controlCode === ClrResponsiveNavCodes.NAV_TOGGLE) {
            this._classList.toggle(navClass);
        }
    };
    MainContainer.prototype.ngOnDestroy = function () {
        this._subscription.unsubscribe();
    };
    MainContainer.decorators = [
        { type: Directive, args: [{
                    selector: "clr-main-container",
                    host: {
                        "[class.main-container]": "true"
                    }
                },] },
    ];
    /** @nocollapse */
    MainContainer.ctorParameters = function () { return [
        { type: ElementRef, },
        { type: ClrResponsiveNavigationService, },
    ]; };
    return MainContainer;
}());
//# sourceMappingURL=main-container.js.map