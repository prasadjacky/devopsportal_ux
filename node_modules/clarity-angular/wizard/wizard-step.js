var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import { Component, Input, ElementRef, forwardRef, Inject } from "@angular/core";
import { TabLink } from "../tabs/tab-link";
import { Wizard } from "./wizard";
export var WizardStep = (function (_super) {
    __extends(WizardStep, _super);
    function WizardStep(wizard, elementRef) {
        _super.call(this, wizard);
        this.wizard = wizard;
        this.elementRef = elementRef;
        // is the section completed
        this.isCompleted = false;
        // input variable, optional, to set if this tab is skipped
        this.isSkipped = false;
    }
    WizardStep.prototype.onClick = function () {
        // IE 10 fix to prevent click of disabled tab
        if (!this.active && this.isCompleted) {
            _super.prototype.onClick.call(this);
        }
        return false;
    };
    WizardStep.prototype.ngOnInit = function () {
        // The nav text will be the title of the main section.
        this.title = this.elementRef.nativeElement.innerText.trim();
    };
    WizardStep.decorators = [
        { type: Component, args: [{
                    selector: "clr-wizard-step",
                    template: "\n      <!--\n        ~ Copyright (c) 2016 VMware, Inc. All Rights Reserved.\n        ~ This software is released under MIT license.\n        ~ The full license information can be found in LICENSE in the root directory of this project.\n        -->\n\n      <button class=\"btn btn-link nav-link\" (click)=\"onClick()\" type=\"button\">\n          <ng-content></ng-content>\n      </button>\n    ",
                    host: {
                        "[id]": "id",
                        "[attr.aria-selected]": "active",
                        "[attr.aria-controls]": "ariaControls",
                        "role": "presentation",
                        "[class.clr-nav-link]": "true",
                        "[class.active]": "active",
                        "[class.disabled]": "!active && !isCompleted",
                        "[class.complete]": "isCompleted",
                        "[class.skipped]": "isSkipped"
                    }
                },] },
    ];
    /** @nocollapse */
    WizardStep.ctorParameters = function () { return [
        { type: Wizard, decorators: [{ type: Inject, args: [forwardRef(function () { return Wizard; }),] },] },
        { type: ElementRef, },
    ]; };
    WizardStep.propDecorators = {
        'isSkipped': [{ type: Input, args: ["clrWizardStepIsSkipped",] },],
        'id': [{ type: Input, args: ["clrWizardStepId",] },],
    };
    return WizardStep;
}(TabLink));
//# sourceMappingURL=wizard-step.js.map